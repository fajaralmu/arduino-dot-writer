<!doctype html>
<html>

<head>
    <meta charset="UTF-8">
    <!-- <base href="/ThreeJSEXample/" /> -->
    <base href="/" />
    <link rel="icon" href="assets/csharp.ico" type="image/x-icon" />
    <link rel="stylesheet" type="text/css" href="assets/fa/css/all.css" />
    <link rel="stylesheet" href="assets/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="assets/css/app.css" />
    <title>@ViewBag.Title</title>
    <script src="assets/js/jquery-3.2.1.slim.min.js"></script>
    <script src="assets/js/bootstrap.min.js"></script>
    <script src="assets/js/axios.min.js"></script>
    <script src="assets/js/global.js"></script>
    <script src="assets/js/rest-calls.js"></script>

</head>
<body>

    <div id="container" class="container-fluid">
        <h2 class="text-center">Dot Writer</h2>
        <div class="row">
            <div class="col-3"></div>
            <div class="border border-dark col-6" style="padding: 5px">
                <form id="form-submit" action="#" onsubmit="handleSubmit(event); return false;">
                    <p>Select Image</p>
                    <input class="form-control" type="file" onchange="updateImage(event)" required autocomplete="off" />
                    <p>Preview</p>
                    <img id="img-preview" width="200" height="200" />
                    <p></p>
                    <input type="submit" class="btn btn-primary" value="Submit"/>
                </form>
            </div>
            <div class="col-3"></div>
        </div>
    </div>
    <script type="text/javascript">
        const imagePreview  = document.getElementById("img-preview");
        let base64String    = null;

        function handleSubmit(event)
        {
            event.preventDefault();
            if (!base64String)
            {
                alert("Invalid image");
                return;
            }
            executeWrite(base64String)
            .then(response=>{
                const json = response.data;
                alert("Success");
            })
            .catch(error=>{
                alert("Failed");
                console.error(error);
            })
        }

        function updateImage(event)
        {
            toBase64(event.target)
            .then(base64 => {
                base64String = base64;
                imagePreview.src = base64String;
            })
            .catch(error => {
                console.error(error);
                alert("Error loading image");
            });
        }

        function toBase64(fileInput) 
        {
            return new Promise(function (resolve, reject) 
            {
                try 
                {
                    if (fileInput.files == null) 
                    {
                        throw new Error("File not found");
                    }
                    const reader = new FileReader();
                    reader.onload = function () { resolve(reader.result);  }
                    reader.onerror = function (error) { reject(error); }
                    reader.readAsDataURL(fileInput.files[0]);

                } catch (e) 
                {
                    reject(e);
                }
            } );
        }

    </script>

</body>

</html>